# HOW TO USE:
# $ docker-compose -p databoutique -f docker-compose.yml up   #
#

version: '3.8'
services:
  caddy:
    container_name: databoutique_backend_caddy
    image: 'caddy:2-alpine'
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - '$PWD/Caddyfile:/etc/caddy/Caddyfile'
      - 'caddy_data:/data'
      - 'caddy_config:/config'
    networks:
      - web
      - caddy_internal

  # The purpose of this service is to store our application data.
  db:
    container_name: databoutique_mongodb
    image: mongo:6.0.5-jammy
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    restart: unless-stopped
    logging:
      driver: none
    networks:
      - caddy_internal

  # The main application.
  app:
    container_name: databoutique_backend_app
    image: 'bartmika/databoutique-backend:latest'
    stdin_open: true
    restart: unless-stopped
    environment:
        DATABOUTIQUE_BACKEND_IP: 0.0.0.0
        DATABOUTIQUE_BACKEND_PORT: 8000
        DATABOUTIQUE_BACKEND_HMAC_SECRET: ${DATABOUTIQUE_BACKEND_HMAC_SECRET}
        DATABOUTIQUE_BACKEND_HAS_DEBUGGING: ${DATABOUTIQUE_BACKEND_HAS_DEBUGGING}
        DATABOUTIQUE_BACKEND_DB_URI: ${DATABOUTIQUE_BACKEND_DB_URI}
        DATABOUTIQUE_BACKEND_DB_NAME: ${DATABOUTIQUE_BACKEND_DB_NAME}
        DATABOUTIQUE_BACKEND_CACHE_URI: ${DATABOUTIQUE_BACKEND_CACHE_URI}
        DATABOUTIQUE_BACKEND_CACHE_PASSWORD: ${DATABOUTIQUE_BACKEND_CACHE_PASSWORD}
        DATABOUTIQUE_BACKEND_AWS_ACCESS_KEY: ${DATABOUTIQUE_BACKEND_AWS_ACCESS_KEY}
        DATABOUTIQUE_BACKEND_AWS_SECRET_KEY: ${DATABOUTIQUE_BACKEND_AWS_SECRET_KEY}
        DATABOUTIQUE_BACKEND_AWS_ENDPOINT: ${DATABOUTIQUE_BACKEND_AWS_ENDPOINT}
        DATABOUTIQUE_BACKEND_AWS_REGION: ${DATABOUTIQUE_BACKEND_AWS_REGION}
        DATABOUTIQUE_BACKEND_AWS_BUCKET_NAME: ${DATABOUTIQUE_BACKEND_AWS_BUCKET_NAME}
        DATABOUTIQUE_BACKEND_INITIAL_ADMIN_EMAIL: ${DATABOUTIQUE_BACKEND_INITIAL_ADMIN_EMAIL} # Required email for root admin when project starts up
        DATABOUTIQUE_BACKEND_INITIAL_ADMIN_PASSWORD: ${DATABOUTIQUE_BACKEND_INITIAL_ADMIN_PASSWORD} # Required password for root admin when project starts up
        DATABOUTIQUE_BACKEND_INITIAL_ADMIN_STORE_ID: ${DATABOUTIQUE_BACKEND_INITIAL_ADMIN_STORE_ID}
        DATABOUTIQUE_BACKEND_INITIAL_ADMIN_STORE_NAME: ${DATABOUTIQUE_BACKEND_INITIAL_ADMIN_STORE_NAME}
        DATABOUTIQUE_BACKEND_INITIAL_ADMIN_STORE_OPENAI_KEY: ${DATABOUTIQUE_BACKEND_INITIAL_ADMIN_STORE_OPENAI_KEY}
        DATABOUTIQUE_BACKEND_INITIAL_ADMIN_STORE_OPENAI_ORGANIZATION_KEY: ${DATABOUTIQUE_BACKEND_INITIAL_ADMIN_STORE_OPENAI_ORGANIZATION_KEY}
        DATABOUTIQUE_BACKEND_DOMAIN_NAME: ${DATABOUTIQUE_BACKEND_DOMAIN_NAME}
        AWS_ACCESS_KEY: ${DATABOUTIQUE_BACKEND_AWS_ACCESS_KEY} # AWS SDK requires this exact name.
        AWS_SECRET_KEY: ${DATABOUTIQUE_BACKEND_AWS_SECRET_KEY} # AWS SDK requires this exact name.
        AWS_REGION: ${DATABOUTIQUE_BACKEND_AWS_REGION}         # AWS SDK requires this exact name.
        DATABOUTIQUE_BACKEND_MAILGUN_API_KEY: ${DATABOUTIQUE_BACKEND_MAILGUN_API_KEY}
        DATABOUTIQUE_BACKEND_MAILGUN_DOMAIN: ${DATABOUTIQUE_BACKEND_MAILGUN_DOMAIN}
        DATABOUTIQUE_BACKEND_MAILGUN_API_BASE: ${DATABOUTIQUE_BACKEND_MAILGUN_API_BASE}
        DATABOUTIQUE_BACKEND_MAILGUN_SENDER_EMAIL: ${DATABOUTIQUE_BACKEND_MAILGUN_SENDER_EMAIL}
        DATABOUTIQUE_BACKEND_PDF_BUILDER_DATA_DIRECTORY_PATH: ${DATABOUTIQUE_BACKEND_PDF_BUILDER_DATA_DIRECTORY_PATH}
        DATABOUTIQUE_BACKEND_PDF_BUILDER_ASSOCIATE_INVOICE_PATH: ${DATABOUTIQUE_BACKEND_PDF_BUILDER_ASSOCIATE_INVOICE_PATH}
    depends_on:
      - db
    links:
      - db
    volumes:
      - app_data:/data
    networks:
      - caddy_internal

networks:
  web:
    external: true
  caddy_internal:
    external: false
    driver: bridge

volumes:
  app_data:
    external: true
  mongodb_data:
    external: true
  mongodb_config:
    external: true
  caddy_data:
    external: true
  caddy_config:
    external: true
